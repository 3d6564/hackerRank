#!/bin/python3

# Project: Mark and Toys
# This: sortcheck.py
# Author: C Robinson
# Date: 07 Sep 2018
# Purpose: Solve Mark and Toys problem. What this problem does:
#                 - Sorts prices of toys
#                 - Decrease amount in wallet as toys are 'bought'
#                 - Return counter of number of toys bought
#     

import math
import os
import random
import re
import sys

# Complete the maximumToys function below.
def maximumToys(prices, k):
    c = 0;
    prices.sort()
    for i in range(len(prices)):
        if(prices[i] <= k):
            k -= prices[i]
            c += 1
        elif(c == 0):
            return c
            break
    return c

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    nk = input().split()
    n = int(nk[0])
    k = int(nk[1])
    prices = list(map(int, input().rstrip().split()))
    result = maximumToys(prices, k)

    fptr.write(str(result) + '\n')
    fptr.close()
