/*
Project: Minimum Swap 2
This: minimumSwap2Solution.java
Author: C Robinson
Date: 06 Sep 2018
Purpose: Check each index of array if the current iteration matches the index. If it matches, it moves on.
If it does not match it will do the following:
                - Increase counter until it finds correct location for number
                - Swap with location found
 */
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class minimumSwap2Solution {

    // Complete the minimumSwaps function below.
    static int minimumSwaps(int[] arr) {
        int n = 0;
        for(int i = 0; i < arr.length - 1; i++){
            if(i + 1 != arr[i]){
                int m = i;
                while(arr[m] != i + 1){
                    m++;
                }
                int t = arr[m];
                arr[m] = arr[i];
                arr[i] = t;
                n++;
            }            
        }
        return n;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int res = minimumSwaps(arr);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
